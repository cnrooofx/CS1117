-- item 1

#  Script Name : functions.py
#  Author: Conor Fox 119322236

def separated_input(string1, string2, sep_string_value, end_string_value):
    '''
    Takes 4 inputs and arranges them in the correct order
    '''
    string1 = str(string1.lower())
    string1 = str(string1.capitalize())
    string2 = str(string2.lower())
    string2 = str(string2.capitalize())
    sep_string_value = str(sep_string_value.lower())
    sep_string_value = str(sep_string_value.capitalize())

    print(string1+" ", string2+" ", sep=sep_string_value+" ", end=end_string_value)

def main():
    separated_input("phineas","ferb", "and", "rock!!!\n")
    separated_input("doofenshmirtz","incorporated", "Evil", "!!!\n")

if __name__ == '__main__':
    main()


* OUTPUT *

cf26@csg20-12:~/CS1117/lab2$ python3 functions.py
Phineas And Ferb rock!!!
Doofenshmirtz Evil Incorporated !!!

-- item 2

#  Script Name : calling_file.py
#  Author: Conor Fox 119322236

from my_functions.functions import separated_input

def main():
    separated_input("my", "is", "name", "Conor")

if __name__ == '__main__':
    main()

* OUTPUT *

Conor@conor Lab2_lecture6 % python3 calling_file.py
My Name Is Conor%

-- item 2 (e)

Conor@conor Lab2_lecture6 % python3 calling_file.py
My Name Is Conor
The value of __name__ is: 'my_functions.functions'

Conor@conor Lab2_lecture6 % python3 my_functions/functions.py
Phineas And Ferb rock!!!
Doofenshmirtz Evil Incorporated !!!
The value of __name__ is: '__main__'

I think that the __name__ is where the function is being called from

-- item 3 - error checking



Is there a bug here (Y/N):Y
What is the output?
Conor@conor Lab2_lecture6 % python3 bugs.py
  File "bugs.py", line 32
    seperated_input(8, 7, my_sep= +, my_end=" = 15\n")
                                   ^
SyntaxError: invalid syntax


----Original Code----

seperated_input("A", "B", my_sep=" and ", my_end="and C\n")
seperated_input("A", "B", my_end="and C\n", my_sep=" and ")
seperated_input("A", my_end="and C\n", my_sep=" and ", "B")
seperated_input("A", "B", my_sep=" and ")
seperated_input("A", "B", my_end=" and C\n")
seperated_input("A", "B", "C", my_sep=" and ", my_end=" and C\n")
seperated_input("8", "7", my_sep=" + ", my_end=" = 15\n")
seperated_input(8, 7, my_sep= +, my_end=" = 15\n")
seperated_input(8, 7, my_sep=" + ", my_end=15)
seperated_input(8, 7, my_sep=" + ", my_end=" = 15"+"\n")

----Changed Code----

def separated_input(string1, string2, my_sep, my_end):
    print(str(string1)+" ", str(string2)+" ", sep=str(my_sep)+" ", end=str(my_end))

separated_input("A", "B", my_sep=" and", my_end="and C\n")
separated_input("A", "B", my_end="and C\n", my_sep=" and")
separated_input("A", "B", my_end="and C\n", my_sep=" and")
separated_input("A", "B", my_sep=" and", my_end="and C\n")
separated_input("A", "B", my_end="and C\n", my_sep=" and")
separated_input("A", "B", my_sep=" and", my_end="and C\n")
separated_input("8", "7", my_sep=" +", my_end="= 15\n")
separated_input(8, 7, my_sep="+", my_end="= 15\n")
separated_input(8, 7, my_sep=" +", my_end="= 15\n")
separated_input(8, 7, my_sep=" +", my_end="= 15"+"\n")

----Changed Output----

Conor@conor Lab2_lecture6 % python3 bugs.py
A  and B and C
A  and B and C
A  and B and C
A  and B and C
A  and B and C
A  and B and C
8  + 7 = 15
8 + 7 = 15
8  + 7 = 15
8  + 7 = 15
